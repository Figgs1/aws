{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation template to create an encryption enforced S3 bucket shared with 3rd party for secure file exchange.",
    "Parameters": {
        "S3BucketName": {
            "Type": "String",
            "Description": "Name for the S3 bucket.",
            "MinLength": "3"
        },
        "ApplicationTag": {
            "Type": "String",
            "Description": "Application or service this bucket is associated with.",
            "Default": "SecureFileUpload",
            "MinLength": "3"
        },
        "ApplicationEnvironment": {
            "Type": "String",
            "Description": "Environment for this Application. (Example: dev, stg, prd)",
            "Default": "prd",
            "MinLength": "3"
        },
        "ApplicationOwner": {
            "Type": "String",
            "Description": "A valid team DL or individual's email address.",
            "Default": "<Email Address>",
            "MinLength": "3"
        }
    },
    "Resources": {
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Ref": "S3BucketName"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "ApplicationTag"
                        }
                    },
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "ApplicationEnvironment"
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "ApplicationOwner"
                        }
                    },
                    {
                        "Key": "Role",
                        "Value": "S3 Bucket"
                    }
                ]
            }
        },
        "BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "DependsOn": "S3Bucket",
            "Properties": {
                "Bucket": {
                    "Ref": "S3Bucket"
                },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                    {
                      "Sid": "AnonWriteAccess",
                      "Effect": "Allow",
                      "Principal": "*",
                      "Action": "s3:PutObject",
                      "Resource": {
                          "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" }, "/*" ] ] },
                  "Condition": {
                  "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                  },
                  "IpAddress": {
                    "aws:SourceIp": [
                      "111.222.333.444/32",
                      "111.222.333.444/32"
                      ]
                    }
                  }
                },
                        {
                            "Sid": "DenyIncorrectEncryptionHeader",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Action": "s3:PutObject",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "S3BucketName"
                                        },
                                        "/*"
                                    ]
                                ]
                            },
                            "Condition": {
                                "StringNotEquals": {
                                    "s3:x-amz-server-side-encryption": "aws:kms"
                                }
                            }
                        },
                        {
                            "Sid": "DenyUnEncryptedObjectUploads",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Action": "s3:PutObject",
                            "Resource": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" }, "/*" ] ]
                            },
                            "Condition": {
                                "Null": {
                                    "s3:x-amz-server-side-encryption": "true"
                                }
                            }
                        },
                        {
                            "Sid": "AllowListBucket",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action":  "s3:ListBucket",
                            "Resource": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" } ] ]
                            },
                             "Condition": {
                                "IpAddress": {
                                    "aws:SourceIp": [
                                      "111.222.333.444/32",
                                      "111.222.333.444/32"
                                    ]
                                }
                            }
                        },
                        {
                            "Sid": "AccessAllow",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": [
                                "s3:DeleteObject",
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:PutObject",
                                "s3:PutObjectAcl"
                            ],
                            "Resource": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" }, "/*" ] ]
                            },
                          "Condition": {
                                "IpAddress": {
                                    "aws:SourceIp": [
                                      "111.222.333.444/32",
                                      "111.222.333.444/32"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        "SecOps3pAccessGroup" : {
          "Type" : "AWS::IAM::Group"
        },
        "3PUser" : {
           "Type" : "AWS::IAM::User"
        },
        "SecOps3pUsertoGroup" : {
          "Type" : "AWS::IAM::UserToGroupAddition",
          "Properties" : {
            "GroupName": { "Ref" : "SecOps3pAccessGroup" },
            "Users" : [ { "Ref" : "3PUser" } ]
          }
        },
        "3pS3EncPolicy" : {
          "Type" : "AWS::IAM::Policy",
          "Properties" : {
             "PolicyName" : "secops3paccess",
             "PolicyDocument": {
             "Version": "2012-10-17",
             "Statement": [
               {
                 "Effect": "Allow",
                 "Action": [
                   "s3:ListBucket",
                   "s3:GetBucketLocation",
                   "s3:ListBucketMultipartUploads"
                 ],
                 "Resource" : { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" }, ] ] 
                 },
                 "Condition": {}
               },
               {
                 "Effect": "Allow",
                 "Action": [
                   "s3:AbortMultipartUpload",
                   "s3:GetObjectAcl",
                   "s3:GetObjectVersion",
                   "s3:GetObjectVersionAcl",
                   "s3:PutObject",
                   "s3:PutObjectAcl",
                   "s3:PutObjectVersionAcl"
                 ],
                 "Resource": {
                     "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3Bucket" }, "/*" ] ] },
                 "Condition": {}
               },
               {
                 "Effect": "Allow",
                 "Action": "s3:ListAllMyBuckets",
                 "Resource": "*",
                 "Condition": {}
               },
             ]
            },
             "Groups" : [{ "Ref" : "SecOps3pAccessGroup" }]
          }
        },
        "3PUserAccessKeys" : {
          "Type" : "AWS::IAM::AccessKey",
          "Properties" : {
            "UserName" : { "Ref": "3PUser" }
           }
        }
      },
    "Outputs": {
        "AccessKey": {
          "Value": { "Ref": "3PUserAccessKeys" },
          "Description": "AWS Access Key ID of 3PUser (CAUTION: This value will remain available for viewing in CFN console by anyone with read access to CFN Service)"
        },
        "SecretKey": {
          "Value": { "Fn::GetAtt": [ "3PUserAccessKeys", "SecretAccessKey" ]},
          "Description": "AWS Secret Key of 3PUser (CAUTION: This value will remain available for viewing in CFN console by anyone with read access to CFN Service)"
        }
      }
}
